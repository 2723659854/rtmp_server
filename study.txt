
hls协议详解
https://blog.csdn.net/qq_41839588/article/details/134093390

## 安装ffmpeg软件
apk add ffmpeg
推流
## 切面间隔 3秒 创建一个索引
ffmpeg -i rtmp://127.0.0.1/a/b -c:v h264 -c:a aac -f hls -hls_time 3 -hls_list_size 0   ./hls/put.m3u8
## 切面间隔 1秒 创建一个索引
ffmpeg -i rtmp://127.0.0.1/a/b -c:v h264 -c:a aac -f hls -hls_time 1 -hls_list_size 0   ./hls/put.m3u8
## 切面间隔 15秒 创建一个索引
ffmpeg -i rtmp://127.0.0.1/a/b -c:v h264 -c:a aac -f hls -hls_time 15 -hls_list_size 0   ./hls/put.m3u8

ffmpeg -i rtmp://127.0.0.1/a/b -c:v h264 -c:a aac -f hls -hls_time 10 -hls_list_size 0   ./a/b.m3u8

==========================================================================================================================
### 下面的命令是推送视频到rtsp服务器
ffmpeg -re -i demo.mp4 -c:v libx264 -preset veryfast -maxrate 1000k -bufsize 1000k -pix_fmt yuv420p -c:a aac -b:a 160k -ar 44100 -ac 2 -f rtsp rtsp://192.168.101.170:5540/live

ffmpeg -re -i demo.mp4 -c:v libx264 -preset veryfast -maxrate 1000k -bufsize 1000k -pix_fmt yuv420p -c:a aac -b:a 160k -ar 44100 -ac 2 -f rtsp rtsp://192.168.101.170:5540/live

ffmpeg -re -i demo.mp4 -c:v libx264 -preset veryfast -maxrate 1000k -bufsize 1000k -pix_fmt yuv420p -c:a aac -b:a 160k -ar 44100 -ac 2 -f rtsp rtsp://192.168.101.170:5540/live

================================================================================================================================================
以下是rtsp协议的详解
https://cloud.tencent.com/developer/article/2020375
------------------------------------------------------
================================================================================================
RTP在端口号1025到65535之间选择一个未使用的偶数UDP端口号，而在同一次会话中的RTCP则使用下一个基数UDP端口号。RTP默认端口号5004，所以RTCP端口号默认为5005。
--------------------------------------------------
关于协议
https://download.csdn.net/blog/column/12325209/121285741
https://blog.csdn.net/m0_73443478/article/details/137231316
https://blog.csdn.net/peng827965012/article/details/130866600
--------------------------------------------------------------
RTSP协议：负责服务器与客户端之间的请求与响应
RTP协议：负责传输媒体数据
RTCP协议：在RTP传输过程中提供传输信息
rtsp承载与rtp和rtcp之上，rtsp并不会发送媒体数据，而是使用rtp协议传输
rtp并没有规定发送方式，可以选择udp发送或者tcp发送
----------------------------------------------------------------
一次基本的RTSP操作过程:
首先，客户端连接到流服务器并发送一个RTSP描述命令（DESCRIBE）。
流服务器通过一个SDP描述来进行反馈，反馈信息包括流数量、媒体类型等信息。
客户端再分析该SDP描述，并为会话中的每一个流发送一个RTSP建立命令(SETUP)，RTSP建立命令告诉服务器客户端用于接收媒体数据的端口。流媒体连接建立完成后，
客户端发送一个播放命令(PLAY)，服务器就开始在UDP上传送媒体流（RTP包）到客户端。在播放过程中客户端还可以向服务器发送命令来控制快进、快退和暂停等。
最后，客户端可发送一个终止命令(TERADOWN)来结束流媒体会话
————————————————
版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。
原文链接：https://blog.csdn.net/m0_73443478/article/details/137231316
-----------------------------------------------------------------------
一篇关于hls协议转换的文章
https://blog.csdn.net/u013898698/article/details/80803201

======================================================
西瓜播放器
https://h5player.bytedance.com/guide/
========================================================================
rtmp 和 flv发送的都是音频帧AudioFrame和视频帧VideoFrame，
数据被推流到服务器，数据立即被分发给客户端，如果是关键帧，会被保存到队列中。每次有新设备
加入进来，首先发送关键帧，然后发送后续帧。
==================================================================
在加入推流的时候，生成播放索引文件m3u8,然后将接收到的aac 和 avc 数据进项编码打包成ts数据包并保存，同时更新索引文件。
当关闭推流的时候，打完最后一个ts包，在索引文件最后打上结束标志，并保存；
https://blog.csdn.net/qq_35044535/article/details/77838282
ts 是直接把aac和avc 加上header然后写入的，可以使用phpbg/mpegts这个包写入数据。
https://www.cnblogs.com/kuliuheng/p/7127770.html
======================================================================
ts 流分析工具 好像没什么卵用，不能用来打开ts文件
https://www.tsreader.com/legacydownloads/index.html
======================================================================================
Transport Stream
ts文件简称
==========================================================================================
关于flv文件的介绍
https://blog.csdn.net/langzi113/article/details/136235808
============================================================================================
hls协议分析
https://blog.csdn.net/m0_37599645/article/details/117135283

================================================================================
音视频帧的时间戳就是dts,解码时间戳
音频帧头包括三部分：
================================
https://www.cnblogs.com/haibindev/archive/2011/11/10/2244442.html
https://www.cnblogs.com/haibindev/archive/2011/12/29/2305712.html
==========================================================================================
mpegts相关中文文档
https://juejin.cn/post/7102476268930596871
https://blog.yasking.org/a/learn-mpeg2-ts.html
https://blog.csdn.net/qq_25333681/article/details/93541962
https://blog.csdn.net/guoyunfei123/article/details/106319893
========================================================================================
首先传输的数据本身就是es流，是被推流设备编码过后的，
当我们接受到rtmp数据包之后，应该将es数据提取出来，然后封装成pes数据包，然后将pes数据包封装成ts数据包。
===================================================
在网络通信协议当中，通常会使用到位运算，
这样做的好处是：
1，压缩数据，比如是或者否，如果用字节来表示，那么至少要占用一个字节，如果用bit来表示，那么只需要占用一个bit就行了
2，使用位运算，可以提升计算速度，加入用字节来表示数据，那么需要先将字节转换为bit，然后再计算，但是直接使用位运算，就不需要转换，而是可以直接计算的
3，在网络传输中，体积更小，占用更少的宽带。
==============================================================================================
mpeg2 编码和解码
https://blog.csdn.net/houxiaoni01/article/details/99831303
音视频相关书单
https://zhuanlan.zhihu.com/p/427316939
ffmpeg相关讲解
https://ffmpeg.xianwaizhiyin.net/
======================================================
本项目安装了一个phpbg/mpegts扩展包，这个扩展就是个垃圾，只能简单分析mpegts，不能写入（分析其实直接用fread读取出来就行了，根本不需要写一个包）。
但凡了解过mpegts格式，还需要这个包吗，根本用不上。之所以安装这个扩展，就是觉得这个扩展
写的这么烂，挂出来让大家看看。
=============================================
图像的存储方式：比如一张图片有100个像素，每一个像素占8个bit。那么按照从左下角到右上角的顺序挨个像素存储数据，每一个像素里面存储了颜色rgb信息。
然后解析器，按照顺序读取出来后，按照顺序渲染颜色就行了。